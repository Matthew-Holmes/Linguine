// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(LinguineDbContext))]
    partial class LinguineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.26");

            modelBuilder.Entity("Infrastructure.DataClasses.TestRecord", b =>
                {
                    b.Property<int>("DatabasePrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Answered")
                        .HasColumnType("TEXT");

                    b.Property<int>("DictionaryDefinitionKey")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Finished")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Posed")
                        .HasColumnType("TEXT");

                    b.HasKey("DatabasePrimaryKey");

                    b.HasIndex("DictionaryDefinitionKey");

                    b.ToTable("TestRecords");
                });

            modelBuilder.Entity("Infrastructure.DictionaryDefinition", b =>
                {
                    b.Property<int>("DatabasePrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DatabasePrimaryKey");

                    b.ToTable("DictionaryDefinitions");
                });

            modelBuilder.Entity("Infrastructure.ParsedDictionaryDefinition", b =>
                {
                    b.Property<int>("DatabasePrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DictionaryDefinitionKey")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LearnerLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NativeLanguage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParsedDefinition")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DatabasePrimaryKey");

                    b.HasIndex("DictionaryDefinitionKey");

                    b.ToTable("ParsedDictionaryDefinitions");
                });

            modelBuilder.Entity("Infrastructure.StatementDatabaseEntry", b =>
                {
                    b.Property<int>("DatabasePrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContextCheckpoint")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContextDeltaInsertionsDescendingIndex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContextDeltaRemovalsDescendingIndex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FirstCharIndex")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HeadlessInjectiveDecompositionJSON")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HeadlessRootedDecompositionJSON")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LastCharIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParentKey")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PreviousKey")
                        .HasColumnType("INTEGER");

                    b.HasKey("DatabasePrimaryKey");

                    b.HasIndex("ParentKey");

                    b.HasIndex("PreviousKey")
                        .IsUnique();

                    b.ToTable("Statements");
                });

            modelBuilder.Entity("Infrastructure.StatementDefinitionNode", b =>
                {
                    b.Property<int>("DatabasePrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefinitionKey")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IndexAtCurrentLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StatementKey")
                        .HasColumnType("INTEGER");

                    b.HasKey("DatabasePrimaryKey");

                    b.HasIndex("DefinitionKey");

                    b.HasIndex("StatementKey");

                    b.ToTable("StatementDefinitions");
                });

            modelBuilder.Entity("Infrastructure.TextualMedia", b =>
                {
                    b.Property<int>("DatabasePrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DatabasePrimaryKey");

                    b.ToTable("TextualMedia");
                });

            modelBuilder.Entity("Infrastructure.TextualMediaSession", b =>
                {
                    b.Property<int>("DatabasePrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cursor")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("TEXT");

                    b.Property<int>("TextualMediaKey")
                        .HasColumnType("INTEGER");

                    b.HasKey("DatabasePrimaryKey");

                    b.HasIndex("TextualMediaKey");

                    b.ToTable("TextualMediaSessions");
                });

            modelBuilder.Entity("Infrastructure.VariantRoot", b =>
                {
                    b.Property<int>("DatabasePrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Root")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Variant")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DatabasePrimaryKey");

                    b.ToTable("Variants");
                });

            modelBuilder.Entity("Infrastructure.DataClasses.TestRecord", b =>
                {
                    b.HasOne("Infrastructure.DictionaryDefinition", "Definition")
                        .WithMany()
                        .HasForeignKey("DictionaryDefinitionKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Definition");
                });

            modelBuilder.Entity("Infrastructure.ParsedDictionaryDefinition", b =>
                {
                    b.HasOne("Infrastructure.DictionaryDefinition", "CoreDefinition")
                        .WithMany()
                        .HasForeignKey("DictionaryDefinitionKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoreDefinition");
                });

            modelBuilder.Entity("Infrastructure.StatementDatabaseEntry", b =>
                {
                    b.HasOne("Infrastructure.TextualMedia", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.StatementDatabaseEntry", "Previous")
                        .WithOne()
                        .HasForeignKey("Infrastructure.StatementDatabaseEntry", "PreviousKey");

                    b.Navigation("Parent");

                    b.Navigation("Previous");
                });

            modelBuilder.Entity("Infrastructure.StatementDefinitionNode", b =>
                {
                    b.HasOne("Infrastructure.DictionaryDefinition", "DictionaryDefinition")
                        .WithMany()
                        .HasForeignKey("DefinitionKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.StatementDatabaseEntry", "StatementDatabaseEntry")
                        .WithMany()
                        .HasForeignKey("StatementKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DictionaryDefinition");

                    b.Navigation("StatementDatabaseEntry");
                });

            modelBuilder.Entity("Infrastructure.TextualMediaSession", b =>
                {
                    b.HasOne("Infrastructure.TextualMedia", "TextualMedia")
                        .WithMany()
                        .HasForeignKey("TextualMediaKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TextualMedia");
                });
#pragma warning restore 612, 618
        }
    }
}
